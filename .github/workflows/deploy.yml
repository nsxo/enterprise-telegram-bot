name: 🚀 Deploy to Railway

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if no changes'
        required: false
        default: 'false'

jobs:
  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
    
    - name: 🔍 Check for Changes
      id: changes
      run: |
        # Check if this is a force deploy
        if [ "${{ github.event.inputs.force_deploy }}" = "true" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "🔄 Force deployment requested"
          exit 0
        fi
        
        # Check for meaningful changes (not just docs/readme)
        CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
        echo "Changed files: $CHANGED_FILES"
        
        # Filter out non-deployment files
        MEANINGFUL_CHANGES=$(echo "$CHANGED_FILES" | grep -E '\.(py|toml|txt|json|sql|sh)$|Procfile|Dockerfile|railway' || true)
        
        if [ -n "$MEANINGFUL_CHANGES" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "✅ Deployment-worthy changes detected:"
          echo "$MEANINGFUL_CHANGES"
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No deployment-worthy changes detected"
        fi
    
    - name: 🚀 Deploy to Railway
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        echo "🚀 Starting deployment process..."
        
        # Update Railway trigger file with deployment info
        cat > .railway-trigger << EOF
        Deployment Info:
        - Triggered by: GitHub Actions
        - Commit: ${{ github.sha }}
        - Branch: ${{ github.ref_name }}
        - Timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
        - Actor: ${{ github.actor }}
        EOF
        
        echo "✅ Railway trigger file updated"
        echo "Railway will automatically deploy this commit"
    
    - name: 📊 Deployment Summary
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Has Changes:** ${{ steps.changes.outputs.has_changes }}" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.changes.outputs.has_changes }}" = "true" ]; then
          echo "- **Status:** ✅ Deployed to Railway" >> $GITHUB_STEP_SUMMARY
          echo "- **Railway URL:** https://independent-art-production-51fb.up.railway.app" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Status:** ⏭️ Skipped (no changes)" >> $GITHUB_STEP_SUMMARY
        fi
        
  notify:
    name: 📢 Notify Deployment
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: 📢 Deployment Notification
      run: |
        if [ "${{ needs.deploy.result }}" = "success" ]; then
          echo "✅ Deployment completed successfully!"
          echo "🔗 Bot should be running at: https://independent-art-production-51fb.up.railway.app"
          echo "🤖 Test with /start in Telegram"
        else
          echo "❌ Deployment failed or was skipped"
          echo "🔍 Check the logs for more information"
        fi 