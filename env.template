# Enterprise Telegram Bot - Environment Variables Template
# Copy this file to .env and fill in your actual values
# NEVER commit the actual .env file to version control

# =============================================================================
# TELEGRAM BOT CONFIGURATION (REQUIRED)
# =============================================================================

# Your Telegram Bot Token from @BotFather
BOT_TOKEN=your_telegram_bot_token_here

# Admin Group ID (negative number for groups/channels)
# Get this by adding your bot to a group and using /getgroupid command
ADMIN_GROUP_ID=-1001234567890

# Webhook URL (for production deployment)
# Example: https://your-app.railway.app
WEBHOOK_URL=https://your-app.railway.app

# =============================================================================
# DATABASE CONFIGURATION (REQUIRED)
# =============================================================================

# PostgreSQL Database URL
# Format: postgresql://username:password@hostname:port/database_name
# Local development example:
DATABASE_URL=postgresql://postgres:password@localhost:5432/telegram_bot

# Database Connection Pool Settings (Optional)
DB_POOL_MIN_CONN=2
DB_POOL_MAX_CONN=10

# =============================================================================
# STRIPE PAYMENT CONFIGURATION (REQUIRED)
# =============================================================================

# Stripe API Key (use test keys for development)
# Test: sk_test_... | Live: sk_live_...
STRIPE_API_KEY=sk_test_your_stripe_api_key_here

# Stripe Webhook Secret (from Stripe Dashboard)
# Test: whsec_test_... | Live: whsec_...
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here

# =============================================================================
# APPLICATION CONFIGURATION (OPTIONAL)
# =============================================================================

# Flask Debug Mode (NEVER set to true in production)
FLASK_DEBUG=false

# Logging Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Application Port (Railway will override this)
PORT=8000

# =============================================================================
# GUNICORN CONFIGURATION (PRODUCTION)
# =============================================================================

# Number of Gunicorn worker processes
GUNICORN_WORKERS=4

# Number of threads per worker
GUNICORN_THREADS=2

# Request timeout in seconds
GUNICORN_TIMEOUT=30

# Worker class (sync, gevent, uvicorn.workers.UvicornWorker)
GUNICORN_WORKER_CLASS=sync

# =============================================================================
# REDIS CONFIGURATION (OPTIONAL - FOR CACHING)
# =============================================================================

# Redis URL for caching (optional)
# REDIS_URL=redis://localhost:6379/0

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Secret key for Flask sessions and security
SECRET_KEY=your_super_secret_key_here_use_a_long_random_string

# Webhook secret token for additional security
WEBHOOK_SECRET_TOKEN=your_webhook_secret_token_here

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Set to true for development features
DEV_MODE=false

# Enable detailed error messages (NEVER in production)
DEBUG_WEBHOOKS=false 